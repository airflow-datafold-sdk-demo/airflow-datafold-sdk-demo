name: CI for MWAA Staging

on:
  pull_request:
    types:
    - opened
    - reopened
    - synchronize
    - ready_for_review
  push:
    branches:
      - '!main'

jobs:

  get_pr_num:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.step1.outputs.test }}
    
    steps:

    - uses: jwalton/gh-find-current-pr@v1.3.0
      id: findPR
    
    - run: echo "test=${{ steps.findPr.outputs.pr }}" >> "$GITHUB_OUTPUT"
      id: step1
      

  #test:
  #  needs: [get_pr_num]
  #  runs-on: ubuntu-latest
#
#    steps:

  #  - name: test output
  #    run: echo $OUTPUT1
  #    env:
  #      OUTPUT1: ${{needs.get_pr_num.outputs.output1}} # this is the pr num
      


  upload_to_s3:
    needs: get_pr_num
    runs-on: ubuntu-latest
    
    steps:

    - uses: actions/checkout@main
      with:
        fetch-depth: 0

    - uses: jakejarvis/s3-sync-action@master
      with:
        args: --acl private --follow-symlinks --delete --exclude '.git/*'
      env:
        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET_STAGING }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: 'us-west-2'


  lambda:
    needs: [upload_to_s3, get_pr_num]
    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@main
      with:
        fetch-depth: 0
    
  #  - name: create json file
  #    run: echo '{ "schema_name_postfix": "'$OUTPUT1'" }' | jq . > input.json

    - uses: gagoar/invoke-aws-lambda@master
    # https://github.com/marketplace/actions/invoke-aws-lambda
      with:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        REGION: 'us-west-2'
        FunctionName: invokeDatafoldAirflowStagingDAG
        Payload: '{ "schema_name_postfix": "${{ env.OUTPUT1 }}" }' 
       # Payload: $(echo '{ "schema_name_postfix": "'$OUTPUT1'" }' | jq .)
      env:
        OUTPUT1: "_PR_NUM_${{needs.get_pr_num.outputs.output1}}" # this is the pr num
  

  diff:
    needs: [lambda, get_pr_num]
    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@main
      with:
        fetch-depth: 0

    - name: Identify diffed SQL files
      # - git diff main --name-only
      # - change spaces into new lines
      # - remove lines not containing .sql 
      # - remove dags/ prefix and .sql suffix
      run: echo $(git diff origin/${{ github.base_ref }} --name-only) | tr " " "\n" | sed '/\.sql/!d' |  sed -e "s/^dags\///" -e "s/.sql$//"  > ./git-diff.txt

    - name: display table names
      run: cat ./git-diff.txt

    - name: test
      run: python python/test.py $DATAFOLD_API_KEY
      env:
        DATAFOLD_API_KEY: ${{ secrets.DATAFOLD_API_KEY }}

    - name: Create file with all downstreams of diffed files
      run: python python/get_downstreams.py $DATAFOLD_API_KEY > ./downstreams.txt
      env:
        DATAFOLD_API_KEY: ${{ secrets.DATAFOLD_API_KEY }}
      # git-diff.txt is currently a file with a list of model names, which gets translated
      # into a format that can be submitted to the Datafold sdk (in the "create diffs file" step, 
      # with the output diffs.txt).
      # The next step TODO is to use the GraphQL API to find the downstreams of these models
      # in git-diff.txt and add the names to a "downstreams" file. that file should then have any duplicates
      # removed from it; and then should be combined with git-diff.text; and then any duplicates
      # should be removed from THAT. the output should be diffs.txt and then we go from there.

    - name: Combine git-diff.txt and downstreams.txt
      run: cat file1.txt file2.txt | sort | uniq > combined.txt

    - name: create diffs file
      run: python python/combined_script.py combined.txt > ./diffs.txt
    
    - name: add PR num to diffs file
      run: sed "s|__DATAFOLD_CI_PR_NUM|$OUTPUT1|g" diffs.txt > diffs_with_pr_num.txt
      env:
        OUTPUT1: ${{needs.get_pr_num.outputs.output1}} # this is the pr num

    - name: install Datafold SDK
      id: install-reqs
      run: pip install datafold-sdk

    - name: Kick off Datafold CI Run
      run: datafold ci submit --ci-config-id 286 --pr-num $OUTPUT1 --diffs ./diffs_with_pr_num.txt
      env:
        DATAFOLD_API_KEY: ${{ secrets.DATAFOLD_API_KEY }}
        OUTPUT1: ${{needs.get_pr_num.outputs.output1}} # this is the pr num

